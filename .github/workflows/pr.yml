name: test-and-build
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
jobs:
  tox:
    name: >-
      ${{ matrix.python-version }} â€¢ ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.11"]
        os: ["ubuntu-latest"]

    env:
      TERM: xterm-256color
      PY_COLORS: "1"
      FORCE_COLOR: "1"
      PYTEST_ADDOPTS: "--color=yes"

    steps:
      - uses: actions/checkout@v4

      - name: Set up CPython ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install tox + tox-gh-actions plug-in
        run: |
          python -m pip install --upgrade pip
          pip install "tox>=4.25" "tox-gh-actions>=3.3.0" "tox-uv>=1.25.0"

      - name: Setup test suite
        run: tox run-parallel --parallel auto --parallel-no-spinner --notest --skip-missing-interpreters false

      - name: Run tox
        run: tox run-parallel --parallel auto --parallel-no-spinner --skip-pkg-install

      - name: Build XML coverage
        if: always()
        run: |
          python -Im pip install --quiet "coverage[toml]"
          # Merge every .cover/.* created by tox in the `.cover/` directory into one .coverage
          python -Im coverage combine .cover
          # Produce the XML file Codecov will look for
          python -Im coverage xml -i \
              -o .cover/coverage.${{ matrix.python-version }}.xml


      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: .cover/coverage.${{ matrix.python-version }}.xml
          flags: py${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: always()
        uses: codecov/test-results-action@v1
        with:
          # pick up every junit.*.xml written by tox in the `.junit/` directory
          files: .junit/junit.*.xml
          token: ${{ secrets.CODECOV_TOKEN }}
