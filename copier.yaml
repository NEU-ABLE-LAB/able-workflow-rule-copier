# --- Configuration ----------------------------------------------------------

_subdirectory: "template"

# --- Questions --------------------------------------------------------------

parent_project_tpl_answers_file:
  type: str
  help: "The path to the parent package template file."
  default: ".copier-answers/project.yml"
  when: False

rule_name:
  type: str
  help: "The name of the rule to be created."
  validator: >-
    {% if not (rule_name | regex_search('^[a-zA-Z_][a-zA-Z0-9_]*$')) %}
      The rule name must start with a letter or underscore and can only contain letters, numbers, and underscores.
    {% endif %}

rule_description:
  type: str
  help: "A short description of the rule to be created."
  validator: >-
    {% if not (rule_description | length > 0) %}
      The rule description must not be empty.
    {% endif %}

# TODO-copier-rule consider if the rule should ever use the package, or whether the generic package will always be used.
uses_package:
  type: bool
  help: "Whether the rule uses the project's python package or not."
  when: False

module_type:
  type: str
  help: "The type of module where the rule will be implemented. Select 'none' if the rule does not use a module."
  default: "none"
  choices:
    - "datasets"
    - "features"
    - "models"
    - "none"
  when: "{{ uses_package }}"

module_name:
  type: str
  help: "The name of the module where the rule will be implemented."
  validator: >-
    {% if not (module_name | regex_search('^[a-zA-Z_][a-zA-Z0-9_]*$')) %}
      The module name must start with a letter or underscore and can only contain letters, numbers, and underscores.
    {% endif %}
  when: "{{ uses_package }}"
  # TODO-copier-rule Validate against existing module names in the project.

# TODO-copier-rule Implement ability to append to an existing smk file.
# smk_file_exists:
#   type: bool
#   help: "Does the smk file you want to write this rule to already exist?"

smk_file_name:
  type: str
  help: "The name of the smk file where the rule will be implemented."
  validator: >-
    {% if not (smk_file_name | regex_search('^[a-zA-Z_][a-zA-Z0-9_\-]*\\.smk$')) %}
      The smk file name must start with a letter or underscore, can only contain letters, numbers, hyphens, and underscores, and must end with '.smk'.
    {% endif %}
  # when: "{{ not smk_file_exists }}"

uses_conda:
  type: bool
  help: "Whether the rule uses a conda environment or not."
  default: True

conda_env_key:
  type: str
  help: "The key for the conda environment in the workflow config file."
  default: "ENV_NAME"
  validator: >-
    {% if not (conda_env_key | regex_search('^[a-zA-Z_][a-zA-Z0-9_]*$')) %}
      The conda environment key must start with a letter or underscore and can only contain letters, numbers, and underscores.
    {% endif %}
  when: "{{ uses_conda }}"

# TODO-copier-rule Assign env_name and validate against workflow config files/schemas

# --- Post-configuration -----------------------------------------------------

_answers_file: >-
  ./copier-answers/rule-{{ rule_name }}.yaml

parent_project_tpl: "{{ parent_project_tpl_answers_file }}"

_skip_if_exists:
  - "workflow/rules/{{ smk_file_name }}"
